# This is a basic workflow to help you get started with Actions

name: Deploy

# Controls when the workflow will run
on:
  push:
    branches:
      - main
      - dev

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Print description
        run: echo "Action triggered by a ${{ github.event_name }} event at ${GITHUB_REF#refs/heads/}"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r app/requirements.txt
          pip install coverage

      - name: Run tests
        working-directory: ./app
        id: test-coverage
        run: |
          coverage run -m unittest discover test
          coverage report --omit "test*"
          coverage xml --omit "test*" -o test-coverage.xml
          PERCENTAGE=$(coverage report --omit "test*" | tail -c 5 | head -c -2 | xargs)
          echo "coverage = $PERCENTAGE%"
          echo "::set-output name=RATE::$PERCENTAGE"
          echo "::set-output name=COLOR::$([ $PERCENTAGE -lt 90 ] && echo orange || echo green)"
          echo "::set-output name=HASH_SHORT::$(git rev-parse --short HEAD)"

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Pull new code
        uses: garygrossgarten/github-action-ssh@release
        with:
          command: |
            cd ~/advancedSE-Project
            echo $PWD
            git checkout ${GITHUB_REF#refs/heads/} && git pull --rebase
          host: ${{ secrets.HOST }}
          username: ec2-user
          privateKey: ${{ secrets.PRIVATE_KEY}}

      - name: Get badge
        uses: garygrossgarten/github-action-ssh@release
        with:
          command: |
            cd ~/advancedSE-Project
            echo "coverage = ${{ steps.test-coverage.outputs.RATE }} %"
            mkdir -p ./nginx/static/badges/
            curl "https://img.shields.io/badge/coverage-${{ steps.test-coverage.outputs.RATE }}%25-${{ steps.test-coverage.outputs.COLOR }}" > ./nginx/static/badges/coverage-badge.svg
            curl "https://img.shields.io/badge/build-${{ steps.test-coverage.outputs.HASH_SHORT }}-informational" > ./nginx/static/badges/commit-badge.svg
          host: ${{ secrets.HOST }}
          username: ec2-user
          privateKey: ${{ secrets.PRIVATE_KEY}}

      - name: Deploy
        uses: garygrossgarten/github-action-ssh@release
        with:
          command: |
            cd ~/advancedSE-Project
            echo $PWD
            COMMIT_ID=$(git rev-parse --short HEAD) docker-compose -f docker-compose.prod.yml up -d --no-deps --build
          host: ${{ secrets.HOST }}
          username: ec2-user
          privateKey: ${{ secrets.PRIVATE_KEY}}
